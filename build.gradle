plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id "com.github.node-gradle.node" version "7.0.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

ext {
	webProjectDir = file(property('web.projectDir'))
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:1.5.5.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'com.github.javafaker:javafaker:1.0.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}


node {
    // The Node.js project directory location
    // This is where the package.json file and node_modules directory are located
    // By default it is at the root of the current project
    nodeProjectDir = file(webProjectDir)
}

task buildWebApp(type: NpmTask) {
	dependsOn npmInstall
	args = ['run', 'build']
}

processResources {
	dependsOn buildWebApp
	from(webProjectDir.path + '/build') {into('public')}
}
